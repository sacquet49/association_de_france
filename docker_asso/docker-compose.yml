version: '3.7'
services:
    asso-db:        
        container_name: asso-db
        build: asso-db
        ports:
            - "5432:5432"
        volumes:
            - ./asso-db/:/root/
        environment:
            - POSTGRES_DB=associations
            - POSTGRES_USER=u_asso_admin
            - POSTGRES_PASSWORD=u_asso_admin
    
    nginx:
        container_name: asso-app
        image: nginx:1.15.3-alpine
        restart: on-failure
        volumes:
            - ./nginx/front/public:/usr/src/app
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
        ports:
            - "80:80"
        depends_on:
            - php
            - asso-db
     
    php:
        container_name: asso-php
        build: php
        restart: on-failure
        env_file:
            - ./php/back-asso/.env
        depends_on:
            - asso-db
            
    es:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        container_name: es
        environment:
          - discovery.type=single-node
          - cluster.name=es-docker-cluster
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms256m -Xmx512m"
        ports:
          - 9200:9200
          - 9300:9300
        volumes:
          - ./esdata:/usr/share/elasticsearch/data

    kibana:
        image: docker.elastic.co/kibana/kibana:7.6.2
        ports:
              - "5601:5601"
        environment:
          ELASTICSEARCH_HOSTS: http://es:9200
        depends_on:
            - es

    import:
        container_name: import-association
        build: import-association
        volumes:
            - ./import-association/import:/root/import
            - ./import-association/indexer:/root/indexer
        depends_on:
            - asso-db
            - es
            - kibana